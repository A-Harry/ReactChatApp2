[{"C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\index.js":"1","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\App.js":"2","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\ChatDisplay.js":"4","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\utils\\SocketUtils.js":"5","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\Rooms.js":"6","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\Login.js":"7","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\admin\\AdminLogin.js":"8","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\admin\\Admin.js":"9","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\admin\\EventList.js":"10","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\admin\\ChatList.js":"11","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\admin\\RoomList.js":"12","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\admin\\RoomEdit.js":"13","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\admin\\RoomAdd.js":"14"},{"size":517,"mtime":1625000426462,"results":"15","hashOfConfig":"16"},{"size":1367,"mtime":1625079210860,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1621445708097,"results":"18","hashOfConfig":"16"},{"size":4899,"mtime":1626135837603,"results":"19","hashOfConfig":"16"},{"size":732,"mtime":1621272082608,"results":"20","hashOfConfig":"16"},{"size":500,"mtime":1625693590802,"results":"21","hashOfConfig":"16"},{"size":2160,"mtime":1626212316039,"results":"22","hashOfConfig":"16"},{"size":2581,"mtime":1626291427288,"results":"23","hashOfConfig":"16"},{"size":1095,"mtime":1626294145416,"results":"24","hashOfConfig":"16"},{"size":1946,"mtime":1624916935398,"results":"25","hashOfConfig":"16"},{"size":1930,"mtime":1625258831564,"results":"26","hashOfConfig":"16"},{"size":4137,"mtime":1626065172585,"results":"27","hashOfConfig":"16"},{"size":2651,"mtime":1626058281025,"results":"28","hashOfConfig":"16"},{"size":2453,"mtime":1626295104182,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"2uroll",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\index.js",[],["65","66"],"C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\App.js",["67"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport \"./assets/styles.css\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './'\r\nimport ChatDisplay from './components/ChatDisplay';\r\nimport {Login} from \"./components/Login\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\r\nimport React, { Component } from 'react'\r\nimport AdminLogin from './components/admin/AdminLogin';\r\nimport RoomAdd from './components/admin/RoomAdd'\r\nimport Admin from './components/admin/Admin';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       \r\n    }\r\n  }\r\n  // using componentDidMount() to call io(\"localhost:4000\") otherwise it would run\r\n  // the connection event twice\r\n  componentDidMount(){\r\n\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    // this.socket\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className= \"App\">\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path= \"/\" component={Login}/>\r\n            <Route path=\"/chat\" component={ChatDisplay}/>\r\n            <Route path=\"/adminlogin\" component={AdminLogin}/>\r\n            <Route path=\"/admin\" component={Admin} />\r\n            <Route path=\"/room/add\">\r\n              <RoomAdd/>\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n// export default App;\r\n","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\ChatDisplay.js",["68","69"],"import React from \"react\"\r\nimport io from \"socket.io-client\"\r\nimport Rooms from \"./Rooms.js\"\r\nimport axios from \"axios\"\r\nimport { Container, Form, FormGroup, Input, Button } from \"reactstrap\"\r\nimport \"../assets/styles.css\"\r\n// import {participants} from \"../../server/controllers/socketController\"\r\nexport default class ChatDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.history = this.props.history;\r\n        this.location = this.props.location;\r\n        this.state = {\r\n            username: this.location.state ? this.location.state.username : \"anonymous\",\r\n            messages: [],\r\n            input: '',\r\n            room: 'general',\r\n            rooms: [{ name: 'general', status: \"Active\" }],\r\n            chat: this.location.state ? this.location.state.chat : \"\",\r\n            users: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // this.socket.join(this.state.room)\r\n        this.socket = io(\"localhost:4000\");\r\n        console.log(this.socket)\r\n        this.txtInput = document.getElementsByClassName(\"inputTxt\")\r\n        // if ((this.state.username !== this.props.username) && (this.props.username !== \"\")) {\r\n        //     await this.setState({\r\n        //         username: this.props.username\r\n        //     })\r\n        //     console.log(this.state.username)\r\n        // }\r\n\r\n        if (this.state.username !== \"anonymous\") {\r\n            this.socket.emit(\"change_username\", { username: this.state.username })\r\n        }\r\n\r\n        this.socket.on(\"new_message\", msg => {\r\n            console.log(\"new message\")\r\n            this.onReceivedMessage(msg)\r\n        })\r\n        this.socket.on(\"update_self\", (msg) => {\r\n            this.onReceivedMessage(msg)\r\n        })\r\n\r\n        const roomlist = await axios.get(\"http://localhost:4000/api/rooms\")\r\n        console.log(roomlist.data)\r\n        this.setState({\r\n            rooms: [...this.state.rooms.concat(roomlist.data)]\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.socket.disconnect()\r\n    }\r\n\r\n    onInput = (e) => {\r\n        this.setState({\r\n            input: e.target.value\r\n        })\r\n    }\r\n\r\n    //send message to server\r\n    newMessage = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.input !== '') {\r\n            this.socket.emit(\"new_message\", { username: this.state.username, message: this.state.input })\r\n            this.setState({\r\n                input: ''\r\n            })\r\n            this.txtInput[0].value = \"\"\r\n        }\r\n    }\r\n\r\n    //when receiving message\r\n    onReceivedMessage = (msg) => {\r\n        this.setState({\r\n            messages: [...this.state.messages, msg]\r\n        })\r\n        if(msg.participants){\r\n            this.setState({\r\n                users: msg.participants\r\n            })\r\n        }\r\n    }\r\n\r\n    onChangeRoom = (room) => {\r\n        if (this.state.room !== room.target.value) {\r\n            this.socket.emit(\"change_room\", room.target.value)\r\n            this.setState({\r\n                room: room.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    returnHome = (e) => {\r\n        this.history.push(\"/\")\r\n        this.socket.disconnect()\r\n    }\r\n\r\n    render() {\r\n        const { rooms } = this.state\r\n        const { users } = this.state\r\n        let roomNames = []\r\n        rooms.forEach(element => {\r\n            roomNames.push(element)\r\n        });\r\n\r\n        const currentRoom = this.state.room;\r\n\r\n        return (\r\n            <div>\r\n                <Container >\r\n                    <h1>ReactChat</h1>\r\n                    <span className=\"subHeading\">\r\n                        <label id=\"current-room\">Current Room: {currentRoom} </label>\r\n                        <button id=\"home\" onClick={this.returnHome}>Return to home </button>\r\n                    </span>\r\n                </Container>\r\n                <Container className=\"chat-container\" fluid=\"lg\">\r\n                    <section className=\"chatbox\">\r\n                        <section className=\"roomContainer\">\r\n                            <Rooms rooms={roomNames} onChangeRoom={this.onChangeRoom} />\r\n                        </section>\r\n                        <section className=\"chat\">\r\n                            <p id=\"numUsers\">{users[currentRoom]} participants in the room</p>\r\n                            {this.state.messages.map((msg) => {\r\n                                return <p id=\"message\">{msg.username}: {msg.message}</p>\r\n                            })}\r\n                        </section>\r\n                    </section>\r\n                    <form className=\"userform\" onSubmit={this.newMessage}>\r\n                        <Input className=\"inputTxt\" placeholder=\"Type a message\" onChange={this.onInput}></Input>\r\n                        <Button type=\"submit\">Send</Button>\r\n                    </form>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\utils\\SocketUtils.js",["70"],"const io = require(\"socket.io-client\")\r\nexport default function(){\r\n    const socket = io(\"localhost:4000\");\r\n    function changeRooms(room){\r\n        socket.emit(\"change_room\", (room));\r\n    }\r\n    \r\n    function changeUsername(username){\r\n        socket.emit(\"change_username\" (username));\r\n    }\r\n    \r\n    function sendMessage(message){\r\n        socket.emit(\"new_message\", message)\r\n    }\r\n    \r\n    function handleUpdateSelf(callback){\r\n        socket.on(\"update_self\", callback)\r\n    }\r\n    function handleMessage(callback){\r\n        return socket.on(\"new_message\", callback)\r\n    }\r\n    return {\r\n        changeRooms,\r\n        changeUsername,\r\n        sendMessage,\r\n        handleUpdateSelf,\r\n        handleMessage\r\n    };\r\n}",["71","72"],"C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\Rooms.js",["73"],"import {Button} from \"reactstrap\"\r\nexport default function Rooms(props) {\r\n    return (\r\n        <div id=\"roomList\">\r\n            <h2>Rooms: </h2>\r\n            {props.rooms.map((room) => {\r\n                if (room.status === \"Active\") {\r\n                    return (\r\n                        <Button color=\"secondary\" key={room._id} onClick={props.onChangeRoom} value={room.name}>{room.name}</Button>\r\n                    )\r\n                }\r\n            })\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\Login.js",["74","75","76","77","78","79","80"],"C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\admin\\AdminLogin.js",["81","82","83"],"C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\admin\\Admin.js",["84"],"C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\admin\\EventList.js",[],"C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\admin\\ChatList.js",[],"C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\admin\\RoomList.js",[],"C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\admin\\RoomEdit.js",["85"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Modal, Button } from \"reactstrap\";\r\n\r\nclass RoomEdit extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        const room = props.room\r\n        this.state = {\r\n            roomName: room.name,\r\n            status: room.status\r\n        }\r\n        this.handleName = this.handleName.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleStatus = this.handleStatus.bind(this);\r\n        this.onClose = this.onClose.bind(this);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        const { roomName, status } = this.state\r\n        const roomID = this.props.room._id\r\n        const obj = {\r\n            roomID,\r\n            roomName,\r\n            status\r\n        }\r\n        const updateText = document.getElementById(\"feedback\")\r\n        e.preventDefault()\r\n        axios.post(`http://localhost:4000/api/rooms/${roomID}`, obj).then(res => {\r\n            console.log(res)\r\n            updateText.innerHTML = res.data\r\n            setTimeout(() => {\r\n                updateText.innerHTML = \"\"\r\n            }, 3000);\r\n        })\r\n    }\r\n\r\n    handleName(e) {\r\n        const name = e.target.value\r\n        this.setState({\r\n            roomName: name\r\n        })\r\n    }\r\n    handleStatus(e) {\r\n        const newStatus = e.target.value\r\n        this.setState({\r\n            status: newStatus\r\n        })\r\n    }\r\n\r\n    onClose(e) {\r\n        e.preventDefault()\r\n        this.props.onClose(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        const { roomName, status } = this.state\r\n        return (\r\n            <div>\r\n                <Modal isOpen={true}>\r\n                    <form className=\"roomEditForm\" onSubmit={this.handleSubmit}>\r\n                        <button class=\"btnClose\" value=\"editClose\" onClick={this.onClose}>Close</button>\r\n                        <label id=\"lblEdit\">Edit Room</label>\r\n                        <label id=\"lblRoom\">Room Name:</label>\r\n                        <input id=\"inpRoom\" placeholder=\"Enter Room name\" value={roomName} onChange={this.handleName}></input>\r\n                        <label id=\"lblStatus\">Status:</label>\r\n                        <select id=\"optStatus\" value={status} onChange={this.handleStatus}>\r\n                            <option>Active</option>\r\n                            <option>Inactive</option>\r\n                        </select>\r\n                        <button id=\"btnUpdate\" type=\"submit\">Update room</button>\r\n                        <p id=\"feedback\"></p>\r\n                    </form>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default RoomEdit;","C:\\Users\\Harry\\Documents\\Github\\React-Chat2\\client\\src\\components\\admin\\RoomAdd.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":12},{"ruleId":"90","severity":1,"message":"94","line":5,"column":21,"nodeType":"92","messageId":"93","endLine":5,"endColumn":25},{"ruleId":"90","severity":1,"message":"95","line":5,"column":27,"nodeType":"92","messageId":"93","endLine":5,"endColumn":36},{"ruleId":"96","severity":1,"message":"97","line":2,"column":1,"nodeType":"98","endLine":29,"endColumn":2},{"ruleId":"86","replacedBy":"99"},{"ruleId":"88","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":6,"column":37,"nodeType":"103","messageId":"104","endLine":6,"endColumn":39},{"ruleId":"90","severity":1,"message":"105","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":19},{"ruleId":"90","severity":1,"message":"106","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":18},{"ruleId":"90","severity":1,"message":"107","line":4,"column":16,"nodeType":"92","messageId":"93","endLine":4,"endColumn":24},{"ruleId":"108","severity":1,"message":"109","line":41,"column":33,"nodeType":"110","messageId":"111","endLine":41,"endColumn":35},{"ruleId":"90","severity":1,"message":"112","line":56,"column":17,"nodeType":"92","messageId":"93","endLine":56,"endColumn":26},{"ruleId":"90","severity":1,"message":"113","line":56,"column":28,"nodeType":"92","messageId":"93","endLine":56,"endColumn":36},{"ruleId":"90","severity":1,"message":"114","line":56,"column":38,"nodeType":"92","messageId":"93","endLine":56,"endColumn":45},{"ruleId":"90","severity":1,"message":"115","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":13},{"ruleId":"90","severity":1,"message":"116","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":20},{"ruleId":"90","severity":1,"message":"117","line":57,"column":17,"nodeType":"92","messageId":"93","endLine":57,"endColumn":23},{"ruleId":"118","severity":1,"message":"119","line":9,"column":5,"nodeType":"120","messageId":"121","endLine":11,"endColumn":6},{"ruleId":"90","severity":1,"message":"122","line":3,"column":17,"nodeType":"92","messageId":"93","endLine":3,"endColumn":23},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormGroup' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["123"],["124"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'ChatDisplay' is defined but never used.","'AdminLogin' is defined but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'chatLogin' is assigned a value but never used.","'username' is assigned a value but never used.","'isAdmin' is assigned a value but never used.","'Admin' is defined but never used.","'useHistory' is defined but never used.","'access' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]